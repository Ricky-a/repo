<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 1. 加载数据源配置 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2. 配置c3p0数据库连接池以及相关属性 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
	</bean>

	<!--3. 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.crm.pojo" />
		<property name="mapperLocations" value="classpath:com/crm/mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描器扫描dao接口包，动态实现dao接口注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.crm.dao" />
	</bean>


	<!-- 扫描service包下所有使用注解的类型 -->
	<context:component-scan base-package="com.crm.service" />

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置基于注解的声明式事务,默认使用注解方式使用事务行为 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- 配置基于注解的声明式事务,默认使用注解方式使用事务行为 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->

	<!-- 5.让Spring通过自动扫描来查询和管理Bean -->
	<!-- <context:component-scan base-package="com.crm.web"> <context:exclude-filter 
		type="annotation" expression="org.springframework.stereotype.Controller" 
		/> </context:component-scan> -->

	<!-- 6.配置Spring的事务管理器 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->

	<!--Spring的声明式事物配置，一次配置永久生效 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		配置事务传播特性 其中propagation表示事务传播行为设置属性，默认为REQUIRED <tx:attributes> <tx:method 
		name="save*" /> <tx:method name="remove" /> <tx:method name="update*" /> 
		<tx:method name="*" read-only="true" propagation="SUPPORTS" /> </tx:attributes> 
		</tx:advice> -->


	<!-- AOP的配置 -->
	<!--配置参与事务的类 -->
	<!-- <aop:config> <aop:pointcut id="myPointcut" expression="execution(public 
		* com.crm.service.impl.*.*(..))" /> <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" 
		/> </aop:config> -->

</beans>
